{"version":3,"file":"js/2005-legacy.c3159b11.js","mappings":"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","sources":["webpack://Osboha180/./node_modules/@kurkle/color/dist/color.esm.js","webpack://Osboha180/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://Osboha180/./node_modules/chart.js/dist/chart.js","webpack://Osboha180/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar","Doughnut","Line","Pie"],"sourceRoot":""}