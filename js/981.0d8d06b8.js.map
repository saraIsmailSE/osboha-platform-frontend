{"version":3,"file":"js/981.0d8d06b8.js","mappings":"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","sources":["webpack://Osboha180/./src/API/services/group.service.js","webpack://Osboha180/./src/utilities/errors.js","webpack://Osboha180/./src/views/OsbohaMain/Control/assignAdministrator.vue","webpack://Osboha180/./src/views/OsbohaMain/Control/assignAdministrator.vue?8484"],"sourcesContent":["import { handleError } from \"vue\";\nimport { api } from \"../Intercepter\";\nimport { customHandleError } from \"../../utilities/errors\";\n\nclass GroupService {\n  async createGroup(groupForm) {\n    try {\n      const response = await api.post(`/group/create`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * Get all groups.\n   *\n   * @return groups;\n   */\n  async getAll(name,page) {\n    try {\n      const groups = await api.get(`/group?page=${page}&name=${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  /**\n   * Get groups by name.\n   *\n   * @param  group name\n   * @return groups;\n   */\n  async searchGroupByName(name) {\n    try {\n      const groups = await api.get(`group/search-group-by-name/${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display it.\n   *\n   * @param  $group_id\n   * @return group info [users , administrators] - posts;\n   */\n\n  async getById(group_id) {\n    try {\n      const group = await api.get(`group/show/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display its basic information.\n   *\n   * @param  $group_id\n   * @return group info;\n   */\n\n  async showBasicInfo(group_id) {\n    try {\n      const group = await api.get(`group/show-basic-info/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Get all books belongs to group users.\n   *\n   * @param  $group_id\n   * @return group books;\n   */\n\n  async getBooks(group_id) {\n    try {\n      const books = await api.get(`group/books/${group_id}`);\n      return books.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  /**\n   * List all exceptions in a group by group Administrators\n   *\n   * @param $group_id\n   * @return group exceptions\n   */\n\n  async getAllGroupExceptions(group_id) {\n    try {\n      const groupExceptions = await api.get(\n        `group/group-exceptions/${group_id}`\n      );\n      return groupExceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Filter group exceptions.\n   *\n   * @param  exception filter , group _id\n   * @return filterd group exceptions\n   */\n\n  async exceptionsFilter(filter, group_id) {\n    try {\n      const exceptions = await api.get(\n        `group/exceptions-filter/${filter}/${group_id}`\n      );\n      return exceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Basic group marks.\n   *\n   * @param  group _id\n   * @return group info , week satistics [100 - 0 -incomplete - most read]\n   */\n\n  async BasicMarksView(group_id,week_id) {\n    try {\n      const BasicMarksView = await api.get(`group/basic-mark-view/${group_id}/${week_id}`);\n      return BasicMarksView.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments\n   */\n  async AllAchievements(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/all-achievements/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments as pages, order by total pages desc.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments as total pages\n   */\n  async AchievementAsPages(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/achievement-as-pages/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * ambassador achievment in a week\n   *\n   * @param  ambassador_name, group _id , week filter [current - previous ]\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassadorAchievement(ambassador_name, group_id, week_filter) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador-achievement/${ambassador_name}/${group_id}/${week_filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * search for ambassador in group\n   *\n   * @param  ambassador_name, group _id\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassador(ambassador_name, group_id) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador/${ambassador_name}/${group_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Add a new leader request (“create RequestAmbassador” permission is required)\n   *\n   * @param  request information [gender - number of requested members]\n  \n   */\n  async createLeaderRequest(request) {\n    try {\n      const response = await api.post(`/group/create-leader-request`, request, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * get last leader ambassador request\n   *\n   * @param  $group id\n   * @return last request;\n   */\n\n  async lastLeaderRequest(group_id) {\n    try {\n      const response = await api.get(`group/last-leader-request/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async deleteById(group_id) {\n    try {\n      return await api.delete(`/group/delete/${group_id}`);\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async update(groupForm) {\n    try {\n      const response = await api.post(`/group/update`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  async getGroupByType(type) {\n    try {\n      const groups=  await api.get(`/group/group-by-type/${type}`);\n      return groups.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  async userGroups(name,page) {\n    try {\n      const groups = await api.get(`/group/user-groups?page=${page}&name=${name}`);\n      return groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /*\n    **** Need to discuss ****\n    async addMember(body) {\n        try {\n            const groups = await api.post('/user-group/', body);\n            return groups.data\n        } catch (error) {\n            return error.response.data.data\n        }\n    }\n    */\n  /**\n   * get group week statistics\n   *\n   * @param  $group_id\n   * @return statistics;\n   */\n\n  async statistics(group_id) {\n    try {\n      const response = await api.get(`group/statistics/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      customHandleError(error, \"statistics\");\n    }\n  }\n  /**\n   * get screenshots and screens by week\n   *\n   * @param  $group_id,$filter\n   * @return number of theses and screenshots;\n   */\n  async thesesAndScreensByWeek(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/theses-and-screens-by-week/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * get avg in a month\n   *\n   * @param  $group_id,$filter\n   * @return month achievement;\n   */\n  async monthAchievement(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/month-achievement/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async assignAdministrator(form) {\n    try {\n      const response = await api.post(`/group/assign-administrator`, form, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  \n}\n\nexport default new GroupService();\n","import router from \"../router\";\n\nexport function customHandleError(error, page = \"\") {\n  console.log(`[ERROR] ${page} =>`, error.response.data);\n  if (error.response.data.statusCode === 404) {\n    router.push({ name: \"NotFound\" });\n  } else if (error.response.data.statusCode === 403) {\n    router.push({ name: \"NotAuthorized\" });\n  }\n  throw error;\n}\n","<template>\r\n    <div class=\"col-sm-12 mt-3\">\r\n        <iq-card class=\"iq-card\">\r\n            <div class=\"iq-card-header-toolbar d-flex text-center align-items-center mx-auto\">\r\n                <h1 class=\"text-center mt-3 mb-3\">اضافة مسؤول</h1>\r\n            </div>\r\n            <div class=\"iq-card-body p-4\">\r\n                <div class=\"image-block text-center\">\r\n                    <img src=\"@/assets/images/main/assign-administrator.png\" class=\"img-fluid rounded w-75\" alt=\"blog-img\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 bg-white pt-2\">\r\n                <div class=\"sign-in-from\">\r\n                    <form class=\"mt-2\" @submit.prevent=\"onSubmit()\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"user\">المستخدم</label>\r\n                            <input v-model=\"v$.form.user.$model\" type=\"email\" class=\"form-control mb-0\" id=\"user\"\r\n                                placeholder=\"ادخل بريد المستخدم\" />\r\n                            <template v-if=\"v$.form.user.$error\">\r\n                                <small style=\"color: red\" v-if=\"v$.form.user.required.$invalid\">البريد الالكتروني للمستخدم\r\n                                    مطلوب</small>\r\n                                <small style=\"color: red\" v-if=\"v$.form.user.email.$invalid\">البريد الالكتروني للمستخدم غير\r\n                                    صحيح</small>\r\n                            </template>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"head_user\"> التوجيه المسؤول عنه</label>\r\n                            <select v-model=\"v$.form.group_id.$model\" class=\"form-select\" data-trigger name=\"group_id\"\r\n                                id=\"group_id\">\r\n                                <option value='' selected>اختر التوجيه</option>\r\n                                <option v-for=\"(group, index) in groups\" :key=\"index\" :value=\"group.id\">\r\n                                    {{ group.name }}\r\n                                </option>\r\n                            </select>\r\n                            <small style=\"color: red\" v-if=\"v$.form.group_id.$error\">\r\n                                يرجى اختيار التوجيه\r\n                            </small>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"role\">دور المسؤول</label>\r\n                            <select v-model=\"v$.form.user_type.$model\" class=\"form-select\" data-trigger name=\"user_type\"\r\n                                id=\"user_type\">\r\n                                <option value=\"\" selected>اختر دور المسؤول</option>\r\n                                <option value=\"advisor\">موجه</option>\r\n                                <option value=\"consultant\">مستشار</option>\r\n                                <option value=\"admin\">ادارة</option>\r\n                            </select>\r\n                            <small style=\"color: red\" v-if=\"v$.form.user_type.$error\">\r\n                                يرجى اختيار نوع الترقية\r\n                            </small>\r\n                        </div>\r\n\r\n                        <div class=\"form-group text-center\" v-if=\"message\">\r\n                            <small style=\"color: red\">\r\n                                {{ message }}\r\n                            </small>\r\n                        </div>\r\n                        <div class=\"col-sm-12 text-center\" v-if=\"loader\">\r\n                            <p class=\"text-center\">جاري الاضافة</p>\r\n                            <img src=\"@/assets/images/page-img/page-load-loader.gif\" alt=\"loader\" style=\"height: 100px\" />\r\n                        </div>\r\n                        <div class=\"d-inline-block w-100\" v-else>\r\n                            <button type=\"submit\" class=\"btn btn-primary float-end\" :disabled=\"loader\">\r\n                                اضافة\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </iq-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, email } from \"@vuelidate/validators\";\r\nimport GroupService from \"@/API/services/group.service\";\r\nconst greaterThanZero = (value) => value > 0;\r\n\r\nexport default {\r\n    name: \"Assign Administrator\",\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n    async created() {\r\n        this.groups = await GroupService.getGroupByType('advising');\r\n    },\r\n    data() {\r\n        return {\r\n            loader: false,\r\n            groups: [],\r\n            form: {\r\n                user: \"\",\r\n                group_id: '',\r\n                user_type: \"\",\r\n            },\r\n            message: \"\",\r\n        };\r\n    },\r\n    validations() {\r\n        return {\r\n            form: {\r\n                user: { required, email },\r\n                group_id: { required, maxValue: greaterThanZero, },\r\n                user_type: { required },\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        async onSubmit() {\r\n            this.v$.$validate();\r\n            if (!this.v$.$error) {\r\n                this.loader = true;\r\n                try {\r\n                    this.message = \"\";\r\n                    const response = await GroupService.assignAdministrator(this.form);\r\n                    this.message = response;\r\n\r\n                    this.v$.form.$reset();\r\n                    this.form = {\r\n                        user: \"\",\r\n                        user_type: '',\r\n                    };\r\n\r\n                    setTimeout(() => {\r\n                        this.message = \"\";\r\n                    }, 1800);\r\n                } catch (error) {\r\n                    this.message = \"حدث خطأ, يرجى المحاولة لاحقاً\";\r\n                } finally {\r\n                    this.loader = false;\r\n                }\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n","import { render } from \"./assignAdministrator.vue?vue&type=template&id=c456137e\"\nimport script from \"./assignAdministrator.vue?vue&type=script&lang=js\"\nexport * from \"./assignAdministrator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["GroupService","createGroup","groupForm","response","api","post","headers","data","error","handleError","getAll","name","page","groups","get","searchGroupByName","getById","group_id","group","showBasicInfo","getBooks","books","getAllGroupExceptions","groupExceptions","exceptionsFilter","filter","exceptions","BasicMarksView","week_id","AllAchievements","AchievementAsPages","searchForAmbassadorAchievement","ambassador_name","week_filter","searchForAmbassador","createLeaderRequest","request","lastLeaderRequest","deleteById","delete","update","getGroupByType","type","userGroups","statistics","customHandleError","thesesAndScreensByWeek","monthAchievement","assignAdministrator","form","console","log","statusCode","router","push","class","_createElementVNode","src","_imports_0","alt","for","style","value","selected","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_imports_1","_hoisted_26","_hoisted_27","_createElementBlock","_hoisted_1","_createVNode","_component_iq_card","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","$event","$options","_hoisted_6","_hoisted_7","$setup","v$","user","$model","id","placeholder","$error","_Fragment","key","required","$invalid","_hoisted_8","email","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_renderList","$data","index","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","user_type","_hoisted_22","message","_hoisted_23","_hoisted_24","_toDisplayString","loader","_hoisted_25","_hoisted_28","_hoisted_29","disabled","_hoisted_30","greaterThanZero","setup","useVuelidate","created","this","validations","maxValue","methods","$validate","$reset","setTimeout","__exports__","render"],"sourceRoot":""}