{"version":3,"file":"js/7707.b89fc2e2.js","mappings":"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","sources":["webpack://Osboha180/./src/API/services/group-type.service.js","webpack://Osboha180/./src/API/services/group.service.js","webpack://Osboha180/./src/utilities/errors.js","webpack://Osboha180/./src/views/OsbohaMain/Group/Update.vue","webpack://Osboha180/./src/views/OsbohaMain/Group/Update.vue?f67d"],"sourcesContent":["import { api } from \"../Intercepter\";\n\nclass GroupTypeService {\n    async getAllGroupTypes() {\n        try{\n            const groupTypes = await api.get('/group-type');\n            return groupTypes.data.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async create(type){\n        try{\n            const groupType = await api.post('/group-type/create', {type});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async getGroupTypeById(id){\n        try{\n            const groupType = await api.post('/group-type/show', {id});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async updateGroupTypeById(id, type){\n        try{\n            const groupType = await api.post('/group-type/update', {id, type});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async deleteGroupTypeById(id){\n        try{\n            const groupType = await api.post('/group-type/delete', {id});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n}\n\nexport default new GroupTypeService()","import { handleError } from \"vue\";\nimport { api } from \"../Intercepter\";\nimport { customHandleError } from \"../../utilities/errors\";\n\nclass GroupService {\n  async createGroup(groupForm) {\n    try {\n      const response = await api.post(`/group/create`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * Get all groups.\n   *\n   * @return groups;\n   */\n  async getAll(name,page) {\n    try {\n      const groups = await api.get(`/group?page=${page}&name=${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  /**\n   * Get groups by name.\n   *\n   * @param  group name\n   * @return groups;\n   */\n  async searchGroupByName(name) {\n    try {\n      const groups = await api.get(`group/search-group-by-name/${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display it.\n   *\n   * @param  $group_id\n   * @return group info [users , administrators] - posts;\n   */\n\n  async getById(group_id) {\n    try {\n      const group = await api.get(`group/show/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display its basic information.\n   *\n   * @param  $group_id\n   * @return group info;\n   */\n\n  async showBasicInfo(group_id) {\n    try {\n      const group = await api.get(`group/show-basic-info/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Get all books belongs to group users.\n   *\n   * @param  $group_id\n   * @return group books;\n   */\n\n  async getBooks(group_id) {\n    try {\n      const books = await api.get(`group/books/${group_id}`);\n      return books.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  /**\n   * List all exceptions in a group by group Administrators\n   *\n   * @param $group_id\n   * @return group exceptions\n   */\n\n  async getAllGroupExceptions(group_id) {\n    try {\n      const groupExceptions = await api.get(\n        `group/group-exceptions/${group_id}`\n      );\n      return groupExceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Filter group exceptions.\n   *\n   * @param  exception filter , group _id\n   * @return filterd group exceptions\n   */\n\n  async exceptionsFilter(filter, group_id) {\n    try {\n      const exceptions = await api.get(\n        `group/exceptions-filter/${filter}/${group_id}`\n      );\n      return exceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Basic group marks.\n   *\n   * @param  group _id\n   * @return group info , week satistics [100 - 0 -incomplete - most read]\n   */\n\n  async BasicMarksView(group_id,week_id) {\n    try {\n      const BasicMarksView = await api.get(`group/basic-mark-view/${group_id}/${week_id}`);\n      return BasicMarksView.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments\n   */\n  async AllAchievements(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/all-achievements/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments as pages, order by total pages desc.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments as total pages\n   */\n  async AchievementAsPages(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/achievement-as-pages/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * ambassador achievment in a week\n   *\n   * @param  ambassador_name, group _id , week filter [current - previous ]\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassadorAchievement(ambassador_name, group_id, week_filter) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador-achievement/${ambassador_name}/${group_id}/${week_filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * search for ambassador in group\n   *\n   * @param  ambassador_name, group _id\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassador(ambassador_name, group_id) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador/${ambassador_name}/${group_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Add a new leader request (“create RequestAmbassador” permission is required)\n   *\n   * @param  request information [gender - number of requested members]\n  \n   */\n  async createLeaderRequest(request) {\n    try {\n      const response = await api.post(`/group/create-leader-request`, request, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * get last leader ambassador request\n   *\n   * @param  $group id\n   * @return last request;\n   */\n\n  async lastLeaderRequest(group_id) {\n    try {\n      const response = await api.get(`group/last-leader-request/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async deleteById(group_id) {\n    try {\n      return await api.delete(`/group/delete/${group_id}`);\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async update(groupForm) {\n    try {\n      const response = await api.post(`/group/update`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  async getGroupByType(type) {\n    try {\n      const groups=  await api.get(`/group/group-by-type/${type}`);\n      return groups.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  async userGroups(name,page) {\n    try {\n      const groups = await api.get(`/group/user-groups?page=${page}&name=${name}`);\n      return groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /*\n    **** Need to discuss ****\n    async addMember(body) {\n        try {\n            const groups = await api.post('/user-group/', body);\n            return groups.data\n        } catch (error) {\n            return error.response.data.data\n        }\n    }\n    */\n  /**\n   * get group week statistics\n   *\n   * @param  $group_id\n   * @return statistics;\n   */\n\n  async statistics(group_id) {\n    try {\n      const response = await api.get(`group/statistics/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      customHandleError(error, \"statistics\");\n    }\n  }\n  /**\n   * get screenshots and screens by week\n   *\n   * @param  $group_id,$filter\n   * @return number of theses and screenshots;\n   */\n  async thesesAndScreensByWeek(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/theses-and-screens-by-week/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * get avg in a month\n   *\n   * @param  $group_id,$filter\n   * @return month achievement;\n   */\n  async monthAchievement(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/month-achievement/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async assignAdministrator(form) {\n    try {\n      const response = await api.post(`/group/assign-administrator`, form, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  \n}\n\nexport default new GroupService();\n","import router from \"../router\";\n\nexport function customHandleError(error, page = \"\") {\n  console.log(`[ERROR] ${page} =>`, error.response.data);\n  if (error.response.data.statusCode === 404) {\n    router.push({ name: \"NotFound\" });\n  } else if (error.response.data.statusCode === 403) {\n    router.push({ name: \"NotAuthorized\" });\n  }\n  throw error;\n}\n","<template>\r\n    <div class=\"col-sm-12 mt-3\">\r\n        <iq-card class=\"iq-card\">\r\n            <div class=\"iq-card-header-toolbar d-flex text-center align-items-center mx-auto\">\r\n                <h1 class=\"text-center mt-3 mb-3\">تعديل مجموعة</h1>\r\n            </div>\r\n            <div class=\"iq-card-body p-4\">\r\n                <div class=\"image-block text-center\">\r\n                    <img class=\"img-fluid rounded w-75\" src=\"@/assets/images/main/request_amb.png\" alt=\"add-group\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 bg-white pt-2\">\r\n                <div class=\"sign-in-from\">\r\n                    <form class=\"mt-2\" @submit.prevent=\"onSubmit()\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"groupName\">اسم المجموعة</label>\r\n                            <input type=\"text\" v-model=\"v$.groupForm.name.$model\" class=\"form-control mb-0\" id=\"groupName\"\r\n                                placeholder=\" اسم المجموعة\" />\r\n                            <small style=\"color: red\" v-if=\"v$.groupForm.name.$error\">\r\n                                اسم المجموعة مطلوب</small>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"groupType\">نوع المجموعة</label>\r\n                            <select v-model=\"v$.groupForm.type_id.$model\" class=\"form-select\" data-trigger\r\n                                name=\"choices-single-default\" id=\"choices-single-default\">\r\n                                <option value=\"0\" selected>اختر نوع المجموعة</option>\r\n                                <option v-for=\"(type, index) in types\" :key=\"index\" :value=\"type.id\">\r\n                                    {{ group_type[type.type] }}\r\n                                </option>\r\n                            </select>\r\n                            <small style=\"color: red\" v-if=\"v$.groupForm.type_id.$error\">نوع المجموعة مطلوب</small>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"groupDescription\">وصف المجموعة</label>\r\n                            <textarea type=\"text\" v-model=\"v$.groupForm.description.$model\" class=\"form-control mb-0\"\r\n                                id=\"groupDescription\" placeholder=\"وصف المجموعة \" />\r\n                            <small style=\"color: red\" v-if=\"v$.groupForm.description.$error\">وصف المجموعة مطلوب</small>\r\n                        </div>\r\n                        <p class=\"text-center my-2\" style=\"color: red\" v-if=\"message\">\r\n                            {{ message }}\r\n                        </p>\r\n                        <router-link class=\"mb-3 text-center d-block w-100\" :to=\"{\r\n                            name: 'group.group-detail',\r\n                            params: { group_id: this.$route.params.group_id },\r\n                        }\">\r\n                            عرض المجموعة\r\n                            <span class=\"align-middle material-symbols-outlined\">\r\n                                keyboard_return\r\n                            </span>\r\n                        </router-link>\r\n                        <div class=\"col-sm-12 text-center\" v-if=\"loading\">\r\n                            <p class=\"text-center\">جاري التعديل</p>\r\n                            <img src=\"@/assets/images/page-img/page-load-loader.gif\" alt=\"loader\" style=\"height: 100px\" />\r\n                        </div>\r\n                        <div class=\"d-inline-block w-100\" v-else>\r\n                            <button type=\"submit\" class=\"btn btn-primary float-end\" :disabled=\"loading\">\r\n                                تعديل\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </iq-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\r\nimport GroupService from \"@/API/services/group.service\";\r\nimport groupType from \"@/API/services/group-type.service\";\r\n\r\nconst greaterThanZero = (value) => value > 0;\r\n\r\nexport default {\r\n    name: \"Update Group\",\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n\r\n    async created() {\r\n        this.setGroup();\r\n        this.types = await groupType.getAllGroupTypes();\r\n\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            types: [],\r\n            group_type: {\r\n                followup: \"فريق متابعة\",\r\n                supervising: \"فريق رقابة\",\r\n                advising: \"فريق توجيه\",\r\n                consultation: \"فريق الاستشارة\",\r\n                Administration: \"الإدارة العليا\",\r\n            },\r\n            groupForm: {\r\n                group_id: this.$route.params.group_id,\r\n                name: \"\",\r\n                type_id: 0,\r\n                description: \"\",\r\n            },\r\n            message: \"\",\r\n            loading: false,\r\n        };\r\n    },\r\n\r\n    validations() {\r\n        return {\r\n            groupForm: {\r\n                name: {\r\n                    required,\r\n                },\r\n                type_id: {\r\n                    required,\r\n                    maxValue: greaterThanZero,\r\n                },\r\n                description: {\r\n                    required,\r\n                },\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        async setGroup() {\r\n            const group = await GroupService.showBasicInfo(this.$route.params.group_id);\r\n            if (group) {\r\n                this.groupForm.name = group.name\r\n                this.groupForm.type_id = group.type_id\r\n                this.groupForm.description = group.description\r\n            }\r\n        },\r\n        async onSubmit() {\r\n            this.v$.$touch();\r\n            if (!this.v$.groupForm.$invalid) {\r\n                this.loading = true;\r\n                try {\r\n                    await GroupService.update(this.groupForm);\r\n                    this.setGroup();\r\n                    this.message = \"تم التعديل\";\r\n                    setTimeout(() => {\r\n                        this.message = \"\";\r\n                    }, 1800);\r\n                } catch (error) {\r\n                    this.message = \"حصل خطأ - لم يتم التعديل!\";\r\n                    //                    console.log(error.response.data);\r\n                    console.log(error);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>","import { render } from \"./Update.vue?vue&type=template&id=9ebcb182\"\nimport script from \"./Update.vue?vue&type=script&lang=js\"\nexport * from \"./Update.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["GroupTypeService","getAllGroupTypes","groupTypes","api","get","data","error","create","type","groupType","post","getGroupTypeById","id","updateGroupTypeById","deleteGroupTypeById","GroupService","createGroup","groupForm","response","headers","handleError","getAll","name","page","groups","searchGroupByName","getById","group_id","group","showBasicInfo","getBooks","books","getAllGroupExceptions","groupExceptions","exceptionsFilter","filter","exceptions","BasicMarksView","week_id","AllAchievements","AchievementAsPages","searchForAmbassadorAchievement","ambassador_name","week_filter","searchForAmbassador","createLeaderRequest","request","lastLeaderRequest","deleteById","delete","update","getGroupByType","userGroups","statistics","customHandleError","thesesAndScreensByWeek","monthAchievement","assignAdministrator","form","console","log","statusCode","router","push","class","_createElementVNode","src","_imports_0","alt","for","style","value","selected","_imports_1","_hoisted_20","_hoisted_21","_createElementBlock","_hoisted_1","_createVNode","_component_iq_card","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","$event","$options","_hoisted_6","_hoisted_7","$setup","v$","$model","placeholder","$error","_hoisted_8","_hoisted_9","_hoisted_10","type_id","_hoisted_11","_Fragment","_renderList","$data","types","index","key","group_type","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","description","_hoisted_16","message","_hoisted_17","_toDisplayString","_component_router_link","to","$route","params","_hoisted_18","loading","_hoisted_19","_hoisted_22","_hoisted_23","disabled","_hoisted_24","greaterThanZero","setup","useVuelidate","created","this","setGroup","followup","supervising","advising","consultation","Administration","validations","required","maxValue","methods","$touch","$invalid","setTimeout","__exports__","render"],"sourceRoot":""}