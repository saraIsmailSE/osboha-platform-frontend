{"version":3,"file":"js/4809.e97aa40e.js","mappings":"gIAEA,MAAMA,EACF,sBAAMC,GACF,IACI,MAAMC,QAAmBC,EAAAA,GAAIC,IAAI,eACjC,OAAOF,EAAWG,KAAKA,IAC3B,CAAC,MAAMC,GACH,OAAOA,CACX,CACJ,CAEA,YAAMC,CAAOC,GACT,IACI,MAAMC,QAAkBN,EAAAA,GAAIO,KAAK,qBAAsB,CAACF,SACxD,OAAOC,EAAUJ,IACrB,CAAC,MAAMC,GACH,OAAOA,CACX,CACJ,CAEA,sBAAMK,CAAiBC,GACnB,IACI,MAAMH,QAAkBN,EAAAA,GAAIO,KAAK,mBAAoB,CAACE,OACtD,OAAOH,EAAUJ,IACrB,CAAC,MAAMC,GACH,OAAOA,CACX,CACJ,CAEA,yBAAMO,CAAoBD,EAAIJ,GAC1B,IACI,MAAMC,QAAkBN,EAAAA,GAAIO,KAAK,qBAAsB,CAACE,KAAIJ,SAC5D,OAAOC,EAAUJ,IACrB,CAAC,MAAMC,GACH,OAAOA,CACX,CACJ,CAEA,yBAAMQ,CAAoBF,GACtB,IACI,MAAMH,QAAkBN,EAAAA,GAAIO,KAAK,qBAAsB,CAACE,OACxD,OAAOH,EAAUJ,IACrB,CAAC,MAAMC,GACH,OAAOA,CACX,CACJ,EAGJ,QAAmBN,C,6DC7CnB,MAAMe,EACJ,iBAAMC,CAAYC,GAChB,IACE,MAAMC,QAAiBf,EAAAA,GAAIO,KAAM,gBAAgBO,EAAW,CAC1DE,QAAS,CAAE,eAAgB,yBAE7B,OAAOD,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,CAMA,YAAMe,CAAOC,EAAKC,GAChB,IACE,MAAMC,QAAerB,EAAAA,GAAIC,IAAK,eAAcmB,UAAaD,KACzD,aAAaE,EAAOnB,IACtB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAOA,uBAAMmB,CAAkBH,GACtB,IACE,MAAME,QAAerB,EAAAA,GAAIC,IAAK,8BAA6BkB,KAC3D,aAAaE,EAAOnB,IACtB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,aAAMoB,CAAQC,GACZ,IACE,MAAMC,QAAczB,EAAAA,GAAIC,IAAK,cAAauB,KAC1C,OAAOC,EAAMvB,KAAKA,IACpB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,mBAAMuB,CAAcF,GAClB,IACE,MAAMC,QAAczB,EAAAA,GAAIC,IAAK,yBAAwBuB,KACrD,OAAOC,EAAMvB,KAAKA,IACpB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,cAAMwB,CAASH,GACb,IACE,MAAMI,QAAc5B,EAAAA,GAAIC,IAAK,eAAcuB,KAC3C,OAAOI,EAAM1B,KAAKA,IACpB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,CASA,2BAAM0B,CAAsBL,GAC1B,IACE,MAAMM,QAAwB9B,EAAAA,GAAIC,IAC/B,0BAAyBuB,KAE5B,OAAOM,EAAgB5B,KAAKA,IAC9B,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,sBAAM4B,CAAiBC,EAAQR,GAC7B,IACE,MAAMS,QAAmBjC,EAAAA,GAAIC,IAC1B,2BAA0B+B,KAAUR,KAEvC,OAAOS,EAAW/B,KAAKA,IACzB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,oBAAM+B,CAAeV,EAASW,GAC5B,IACE,MAAMD,QAAuBlC,EAAAA,GAAIC,IAAK,yBAAwBuB,KAAYW,KAC1E,OAAOD,EAAehC,KAAKA,IAC7B,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAQA,qBAAMiC,CAAgBZ,EAAUW,GAC9B,IACE,MAAMpB,QAAiBf,EAAAA,GAAIC,IACxB,0BAAyBuB,KAAYW,KAExC,OAAOpB,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAQA,wBAAMkC,CAAmBb,EAAUW,GACjC,IACE,MAAMpB,QAAiBf,EAAAA,GAAIC,IACxB,8BAA6BuB,KAAYW,KAE5C,OAAOpB,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,oCAAMmC,CAA+BC,EAAiBf,EAAUgB,GAC9D,IACE,MAAMzB,QAAiBf,EAAAA,GAAIC,IACxB,2CAA0CsC,KAAmBf,KAAYgB,KAE5E,OAAOzB,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,yBAAMsC,CAAoBF,EAAiBf,GACzC,IACE,MAAMT,QAAiBf,EAAAA,GAAIC,IACxB,+BAA8BsC,KAAmBf,KAEpD,OAAOT,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAQA,yBAAMuC,CAAoBC,GACxB,IACE,MAAM5B,QAAiBf,EAAAA,GAAIO,KAAM,+BAA+BoC,EAAS,CACvE3B,QAAS,CAAE,eAAgB,yBAE7B,OAAOD,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CASA,uBAAMyC,CAAkBpB,GACtB,IACE,MAAMT,QAAiBf,EAAAA,GAAIC,IAAK,6BAA4BuB,KAC5D,OAAOT,EAASb,KAAKA,IACvB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAEA,gBAAM0C,CAAWrB,GACf,IACE,aAAaxB,EAAAA,GAAI8C,OAAQ,iBAAgBtB,IAC3C,CAAE,MAAOrB,GACP,OAAOA,CACT,CACF,CAEA,YAAM4C,CAAOjC,GACX,IACE,MAAMC,QAAiBf,EAAAA,GAAIO,KAAM,gBAAgBO,EAAW,CAC1DE,QAAS,CAAE,eAAgB,yBAE7B,OAAOD,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,CAEA,oBAAM6C,CAAe3C,GACnB,IACE,MAAMgB,QAAerB,EAAAA,GAAIC,IAAK,wBAAuBI,KACrD,OAAOgB,EAAOnB,KAAKA,IACrB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CACA,gBAAM8C,CAAW9B,EAAKC,GACpB,IACE,MAAMC,QAAerB,EAAAA,GAAIC,IAAK,2BAA0BmB,UAAaD,KACrE,OAAOE,EAAOnB,IAChB,CAAE,MAAOC,GACP,OAAOA,CACT,CACF,CAoBA,gBAAM+C,CAAW1B,GACf,IACE,MAAMT,QAAiBf,EAAAA,GAAIC,IAAK,oBAAmBuB,KACnD,OAAOT,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPgD,EAAAA,EAAAA,GAAkBhD,EAAO,aAC3B,CACF,CAOA,4BAAMiD,CAAuB5B,EAAUQ,GACrC,IACE,MAAMjB,QAAiBf,EAAAA,GAAIC,IACxB,oCAAmCuB,KAAYQ,KAElD,OAAOjB,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,CAOA,sBAAMkD,CAAiB7B,EAAUQ,GAC/B,IACE,MAAMjB,QAAiBf,EAAAA,GAAIC,IACxB,2BAA0BuB,KAAYQ,KAEzC,OAAOjB,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,CACA,yBAAMmD,CAAoBC,GACxB,IACE,MAAMxC,QAAiBf,EAAAA,GAAIO,KAAM,8BAA8BgD,EAAM,CACnEvC,QAAS,CAAE,eAAgB,yBAE7B,OAAOD,EAASb,KAAKA,IACvB,CAAE,MAAOC,IACPc,EAAAA,EAAAA,IAAYd,EACd,CACF,EAKF,QAAmBS,C,+EChWZ,SAASuC,EAAkBhD,EAAOiB,EAAO,IAO9C,MANAoC,QAAQC,IAAK,WAAUrC,OAAWjB,EAAMY,SAASb,MACV,MAAnCC,EAAMY,SAASb,KAAKwD,WACtBC,EAAAA,EAAOC,KAAK,CAAEzC,KAAM,aACwB,MAAnChB,EAAMY,SAASb,KAAKwD,YAC7BC,EAAAA,EAAOC,KAAK,CAAEzC,KAAM,kBAEhBhB,CACR,C,iJCTO0D,MAAM,kB,GAEPC,EAAAA,EAAAA,GAIM,OAHJD,MAAM,wEAAsE,EAE5EC,EAAAA,EAAAA,GAAmD,MAA/CD,MAAM,yBAAwB,kBAAY,G,GAEhDC,EAAAA,EAAAA,GAQM,OARDD,MAAM,oBAAkB,EAC3BC,EAAAA,EAAAA,GAMM,OANDD,MAAM,2BAAyB,EAClCC,EAAAA,EAAAA,GAIE,OAHAD,MAAM,yBACNE,IAAAC,EACAC,IAAI,kB,MAILJ,MAAM,wB,GACJA,MAAM,gB,GAEFA,MAAM,c,GACTC,EAAAA,EAAAA,GAA2C,SAApCI,IAAI,aAAY,gBAAY,G,SAQ5BC,MAAA,e,GAIJN,MAAM,c,GACTC,EAAAA,EAAAA,GAA2C,SAApCI,IAAI,aAAY,gBAAY,G,GAQjCJ,EAAAA,EAAAA,GAAqD,UAA7CM,MAAM,IAAIC,SAAA,IAAS,qBAAiB,G,qBASvCF,MAAA,e,GAIJN,MAAM,c,GACTC,EAAAA,EAAAA,GAAkD,SAA3CI,IAAI,oBAAmB,gBAAY,G,SAQnCC,MAAA,e,SAINN,MAAM,mBAAmBM,MAAA,e,GAY1BL,EAAAA,EAAAA,GAEO,QAFDD,MAAM,0CAAyC,qBAErD,G,SAEGA,MAAM,yB,GACTC,EAAAA,EAAAA,GAAuC,KAApCD,MAAM,eAAc,gBAAY,G,GACnCC,EAAAA,EAAAA,GAIE,OAHAC,IAAAO,EACAL,IAAI,SACJE,MAAA,kB,YAJFI,EACAC,G,SAMGX,MAAM,wB,+GA3FrBY,EAAAA,EAAAA,IAwGM,MAxGNC,EAwGM,EAvGJC,EAAAA,EAAAA,IAsGUC,EAAA,CAtGDf,MAAM,WAAS,C,kBACtB,IAIM,CAJNgB,EAKAC,GASAhB,EAAAA,EAAAA,GAsFM,MAtFNiB,EAsFM,EArFJjB,EAAAA,EAAAA,GAoFM,MApFNkB,EAoFM,EAnFJlB,EAAAA,EAAAA,GAkFO,QAlFDD,MAAM,OAAQoB,SAAMC,EAAA,KAAAA,EAAA,IAAAC,EAAAA,EAAAA,KAAAC,GAAUC,EAAAJ,YAAQ,e,EAC1CnB,EAAAA,EAAAA,GAYM,MAZNwB,EAYM,CAXJC,GAA2C,SAC3CzB,EAAAA,EAAAA,GAME,SALAzD,KAAK,O,qCACImF,EAAAC,GAAG3E,UAAUK,KAAKuE,OAAMN,GACjCvB,MAAM,oBACNpD,GAAG,YACHkF,YAAY,iB,iBAHHH,EAAAC,GAAG3E,UAAUK,KAAKuE,UAKGF,EAAAC,GAAG3E,UAAUK,KAAKyE,SAAM,WAAxDnB,EAAAA,EAAAA,IAEC,QAFDoB,EAA0D,yBACtC,kBAGtB/B,EAAAA,EAAAA,GAqBM,MArBNgC,EAqBM,CApBJC,GAA2C,SAC3CjC,EAAAA,EAAAA,GAeS,U,qCAdE0B,EAAAC,GAAG3E,UAAUkF,QAAQN,OAAMN,GACpCvB,MAAM,cACN,kBACA1C,KAAK,yBACLV,GAAG,0B,CAEHwF,IAAqD,aACrDxB,EAAAA,EAAAA,IAMSyB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALiBC,EAAAC,OAAK,CAArBhG,EAAMiG,M,WADhB7B,EAAAA,EAAAA,IAMS,UAJN8B,IAAKD,EACLlC,MAAO/D,EAAKI,K,QAEV2F,EAAAI,WAAWnG,EAAKA,OAAI,EAAAoG,M,mBAZhBjB,EAAAC,GAAG3E,UAAUkF,QAAQN,UAeAF,EAAAC,GAAG3E,UAAUkF,QAAQJ,SAAM,WAA3DnB,EAAAA,EAAAA,IAEC,QAFDiC,EACG,wBAAkB,kBAGvB5C,EAAAA,EAAAA,GAYM,MAZN6C,EAYM,CAXJC,GAAkD,SAClD9C,EAAAA,EAAAA,GAME,YALAzD,KAAK,O,qCACImF,EAAAC,GAAG3E,UAAU+F,YAAYnB,OAAMN,GACxCvB,MAAM,oBACNpD,GAAG,mBACHkF,YAAY,iB,iBAHHH,EAAAC,GAAG3E,UAAU+F,YAAYnB,UAKJF,EAAAC,GAAG3E,UAAU+F,YAAYjB,SAAM,WAA/DnB,EAAAA,EAAAA,IAEC,QAFDqC,EACG,wBAAkB,iBAG8BV,EAAAW,UAAO,WAA5DtC,EAAAA,EAAAA,IAEI,IAFJuC,GAEIC,EAAAA,EAAAA,IADCb,EAAAW,SAAO,oBAIJX,EAAA5E,WAAQ,WAFhB0F,EAAAA,EAAAA,IAYcC,EAAA,C,MAXZtD,MAAM,iCAELuD,GAAE,C,2CAAoFhB,EAAA5E,Y,mBAIxF,IAEC,UAFD,kBAEC6F,K,gCAIuCjB,EAAAkB,UAAO,WAAhD7C,EAAAA,EAAAA,IAOM,MAPN8C,EAOMC,MAAA,WACN/C,EAAAA,EAAAA,IAQM,MARNgD,EAQM,EAPJ3D,EAAAA,EAAAA,GAMS,UALPzD,KAAK,SACLwD,MAAM,4BACL6D,SAAUtB,EAAAkB,SACZ,UAED,EAAAK,OAAA,W,qDAcd,MAAMC,EAAmBxD,GAAUA,EAAQ,EAE3C,OACEjD,KAAM,YACN0G,KAAAA,GACE,MAAO,CAAEpC,IAAIqC,EAAAA,EAAAA,MACf,EAEA,aAAMC,GACJC,KAAK3B,YAAc/F,EAAAA,EAAUR,kBAC/B,EAEAI,IAAAA,GACE,MAAO,CACLmG,MAAO,GACPG,WAAY,CACVyB,SAAU,cACVC,YAAa,aACbC,SAAU,aACVC,aAAc,iBACdC,eAAgB,kBAElBvH,UAAW,CACTK,KAAM,GACN6E,QAAS,EACTa,YAAa,IAEfE,QAAS,GACTvF,SAAU,KACV8F,SAAS,EAEb,EACAgB,QAAS,CACP,cAAMrD,GAEJ,GADA+C,KAAKvC,GAAG8C,UACHP,KAAKvC,GAAG3E,UAAU0H,SAAU,CAC/BR,KAAKV,SAAU,EACf,IACE,MAAM7F,QAAcb,EAAAA,EAAaC,YAAYmH,KAAKlH,WAClDkH,KAAKjB,QAAU,cACfiB,KAAKxG,SAAWC,EAAMhB,GAEtBuH,KAAKvC,GAAG3E,UAAU2H,SAClBT,KAAKlH,UAAY,CACfK,KAAM,GACN6E,QAAS,EACTa,YAAa,IAEf6B,YAAW,KACTV,KAAKjB,QAAU,EAAE,GAChB,KACL,CAAE,MAAO5G,GACP6H,KAAKjB,QAAU,4BACfvD,QAAQC,IAAItD,EAAMY,SAASb,KAC7B,CAAE,QACA8H,KAAKV,SAAU,CACjB,CACF,CACF,GAEFqB,WAAAA,GACE,MAAO,CACL7H,UAAW,CACTK,KAAM,CACJyH,SAAQA,EAAAA,IAEV5C,QAAS,CACP4C,SAAQ,KACRC,SAAUjB,GAEZf,YAAa,CACX+B,SAAQA,EAAAA,KAIhB,G,WCvLF,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://Osboha180/./src/API/services/group-type.service.js","webpack://Osboha180/./src/API/services/group.service.js","webpack://Osboha180/./src/utilities/errors.js","webpack://Osboha180/./src/views/OsbohaMain/Group/AddGroup.vue","webpack://Osboha180/./src/views/OsbohaMain/Group/AddGroup.vue?9de7"],"sourcesContent":["import { api } from \"../Intercepter\";\n\nclass GroupTypeService {\n    async getAllGroupTypes() {\n        try{\n            const groupTypes = await api.get('/group-type');\n            return groupTypes.data.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async create(type){\n        try{\n            const groupType = await api.post('/group-type/create', {type});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async getGroupTypeById(id){\n        try{\n            const groupType = await api.post('/group-type/show', {id});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async updateGroupTypeById(id, type){\n        try{\n            const groupType = await api.post('/group-type/update', {id, type});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n\n    async deleteGroupTypeById(id){\n        try{\n            const groupType = await api.post('/group-type/delete', {id});\n            return groupType.data;\n        }catch(error){\n            return error;\n        }\n    }\n}\n\nexport default new GroupTypeService()","import { handleError } from \"vue\";\nimport { api } from \"../Intercepter\";\nimport { customHandleError } from \"../../utilities/errors\";\n\nclass GroupService {\n  async createGroup(groupForm) {\n    try {\n      const response = await api.post(`/group/create`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * Get all groups.\n   *\n   * @return groups;\n   */\n  async getAll(name,page) {\n    try {\n      const groups = await api.get(`/group?page=${page}&name=${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  /**\n   * Get groups by name.\n   *\n   * @param  group name\n   * @return groups;\n   */\n  async searchGroupByName(name) {\n    try {\n      const groups = await api.get(`group/search-group-by-name/${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display it.\n   *\n   * @param  $group_id\n   * @return group info [users , administrators] - posts;\n   */\n\n  async getById(group_id) {\n    try {\n      const group = await api.get(`group/show/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display its basic information.\n   *\n   * @param  $group_id\n   * @return group info;\n   */\n\n  async showBasicInfo(group_id) {\n    try {\n      const group = await api.get(`group/show-basic-info/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Get all books belongs to group users.\n   *\n   * @param  $group_id\n   * @return group books;\n   */\n\n  async getBooks(group_id) {\n    try {\n      const books = await api.get(`group/books/${group_id}`);\n      return books.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  /**\n   * List all exceptions in a group by group Administrators\n   *\n   * @param $group_id\n   * @return group exceptions\n   */\n\n  async getAllGroupExceptions(group_id) {\n    try {\n      const groupExceptions = await api.get(\n        `group/group-exceptions/${group_id}`\n      );\n      return groupExceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Filter group exceptions.\n   *\n   * @param  exception filter , group _id\n   * @return filterd group exceptions\n   */\n\n  async exceptionsFilter(filter, group_id) {\n    try {\n      const exceptions = await api.get(\n        `group/exceptions-filter/${filter}/${group_id}`\n      );\n      return exceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Basic group marks.\n   *\n   * @param  group _id\n   * @return group info , week satistics [100 - 0 -incomplete - most read]\n   */\n\n  async BasicMarksView(group_id,week_id) {\n    try {\n      const BasicMarksView = await api.get(`group/basic-mark-view/${group_id}/${week_id}`);\n      return BasicMarksView.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments\n   */\n  async AllAchievements(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/all-achievements/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments as pages, order by total pages desc.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments as total pages\n   */\n  async AchievementAsPages(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/achievement-as-pages/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * ambassador achievment in a week\n   *\n   * @param  ambassador_name, group _id , week filter [current - previous ]\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassadorAchievement(ambassador_name, group_id, week_filter) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador-achievement/${ambassador_name}/${group_id}/${week_filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * search for ambassador in group\n   *\n   * @param  ambassador_name, group _id\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassador(ambassador_name, group_id) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador/${ambassador_name}/${group_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Add a new leader request (“create RequestAmbassador” permission is required)\n   *\n   * @param  request information [gender - number of requested members]\n  \n   */\n  async createLeaderRequest(request) {\n    try {\n      const response = await api.post(`/group/create-leader-request`, request, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * get last leader ambassador request\n   *\n   * @param  $group id\n   * @return last request;\n   */\n\n  async lastLeaderRequest(group_id) {\n    try {\n      const response = await api.get(`group/last-leader-request/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async deleteById(group_id) {\n    try {\n      return await api.delete(`/group/delete/${group_id}`);\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async update(groupForm) {\n    try {\n      const response = await api.post(`/group/update`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  async getGroupByType(type) {\n    try {\n      const groups=  await api.get(`/group/group-by-type/${type}`);\n      return groups.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  async userGroups(name,page) {\n    try {\n      const groups = await api.get(`/group/user-groups?page=${page}&name=${name}`);\n      return groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /*\n    **** Need to discuss ****\n    async addMember(body) {\n        try {\n            const groups = await api.post('/user-group/', body);\n            return groups.data\n        } catch (error) {\n            return error.response.data.data\n        }\n    }\n    */\n  /**\n   * get group week statistics\n   *\n   * @param  $group_id\n   * @return statistics;\n   */\n\n  async statistics(group_id) {\n    try {\n      const response = await api.get(`group/statistics/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      customHandleError(error, \"statistics\");\n    }\n  }\n  /**\n   * get screenshots and screens by week\n   *\n   * @param  $group_id,$filter\n   * @return number of theses and screenshots;\n   */\n  async thesesAndScreensByWeek(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/theses-and-screens-by-week/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * get avg in a month\n   *\n   * @param  $group_id,$filter\n   * @return month achievement;\n   */\n  async monthAchievement(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/month-achievement/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async assignAdministrator(form) {\n    try {\n      const response = await api.post(`/group/assign-administrator`, form, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  \n}\n\nexport default new GroupService();\n","import router from \"../router\";\n\nexport function customHandleError(error, page = \"\") {\n  console.log(`[ERROR] ${page} =>`, error.response.data);\n  if (error.response.data.statusCode === 404) {\n    router.push({ name: \"NotFound\" });\n  } else if (error.response.data.statusCode === 403) {\n    router.push({ name: \"NotAuthorized\" });\n  }\n  throw error;\n}\n","<template>\n  <div class=\"col-sm-12 mt-3\">\n    <iq-card class=\"iq-card\">\n      <div\n        class=\"iq-card-header-toolbar d-flex text-center align-items-center mx-auto\"\n      >\n        <h1 class=\"text-center mt-3 mb-3\">اضافة مجموعة</h1>\n      </div>\n      <div class=\"iq-card-body p-4\">\n        <div class=\"image-block text-center\">\n          <img\n            class=\"img-fluid rounded w-75\"\n            src=\"@/assets/images/main/request_amb.png\"\n            alt=\"add-group\"\n          />\n        </div>\n      </div>\n      <div class=\"col-12 bg-white pt-2\">\n        <div class=\"sign-in-from\">\n          <form class=\"mt-2\" @submit.prevent=\"onSubmit()\">\n            <div class=\"form-group\">\n              <label for=\"groupName\">اسم المجموعة</label>\n              <input\n                type=\"text\"\n                v-model=\"v$.groupForm.name.$model\"\n                class=\"form-control mb-0\"\n                id=\"groupName\"\n                placeholder=\" اسم المجموعة\"\n              />\n              <small style=\"color: red\" v-if=\"v$.groupForm.name.$error\">\n                اسم المجموعة مطلوب</small\n              >\n            </div>\n            <div class=\"form-group\">\n              <label for=\"groupType\">نوع المجموعة</label>\n              <select\n                v-model=\"v$.groupForm.type_id.$model\"\n                class=\"form-select\"\n                data-trigger\n                name=\"choices-single-default\"\n                id=\"choices-single-default\"\n              >\n                <option value=\"0\" selected>اختر نوع المجموعة</option>\n                <option\n                  v-for=\"(type, index) in types\"\n                  :key=\"index\"\n                  :value=\"type.id\"\n                >\n                  {{ group_type[type.type] }}\n                </option>\n              </select>\n              <small style=\"color: red\" v-if=\"v$.groupForm.type_id.$error\"\n                >نوع المجموعة مطلوب</small\n              >\n            </div>\n            <div class=\"form-group\">\n              <label for=\"groupDescription\">وصف المجموعة</label>\n              <textarea\n                type=\"text\"\n                v-model=\"v$.groupForm.description.$model\"\n                class=\"form-control mb-0\"\n                id=\"groupDescription\"\n                placeholder=\"وصف المجموعة \"\n              />\n              <small style=\"color: red\" v-if=\"v$.groupForm.description.$error\"\n                >وصف المجموعة مطلوب</small\n              >\n            </div>\n            <p class=\"text-center my-2\" style=\"color: red\" v-if=\"message\">\n              {{ message }}\n            </p>\n            <router-link\n              class=\"mb-3 text-center d-block w-100\"\n              v-if=\"group_id\"\n              :to=\"{\n                name: 'group.group-detail',\n                params: { group_id: group_id },\n              }\"\n            >\n              عرض المجموعة\n              <span class=\"align-middle material-symbols-outlined\">\n                keyboard_return\n              </span>\n            </router-link>\n            <div class=\"col-sm-12 text-center\" v-if=\"loading\">\n              <p class=\"text-center\">جاري الاضافة</p>\n              <img\n                src=\"@/assets/images/page-img/page-load-loader.gif\"\n                alt=\"loader\"\n                style=\"height: 100px\"\n              />\n            </div>\n            <div class=\"d-inline-block w-100\" v-else>\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary float-end\"\n                :disabled=\"loading\"\n              >\n                اضافة\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </iq-card>\n  </div>\n</template>\n<script>\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\nimport GroupService from \"@/API/services/group.service\";\nimport groupType from \"@/API/services/group-type.service\";\n\nconst greaterThanZero = (value) => value > 0;\n\nexport default {\n  name: \"Add Group\",\n  setup() {\n    return { v$: useVuelidate() };\n  },\n\n  async created() {\n    this.types = await groupType.getAllGroupTypes();\n  },\n\n  data() {\n    return {\n      types: [],\n      group_type: {\n        followup: \"فريق متابعة\",\n        supervising: \"فريق رقابة\",\n        advising: \"فريق توجيه\",\n        consultation: \"فريق الاستشارة\",\n        Administration: \"الإدارة العليا\",\n      },\n      groupForm: {\n        name: \"\",\n        type_id: 0,\n        description: \"\",\n      },\n      message: \"\",\n      group_id: null,\n      loading: false,\n    };\n  },\n  methods: {\n    async onSubmit() {\n      this.v$.$touch();\n      if (!this.v$.groupForm.$invalid) {\n        this.loading = true;\n        try {\n          const group = await GroupService.createGroup(this.groupForm);\n          this.message = \"تمت الاضافة\";\n          this.group_id = group.id;\n\n          this.v$.groupForm.$reset();\n          this.groupForm = {\n            name: \"\",\n            type_id: 0,\n            description: \"\",\n          };\n          setTimeout(() => {\n            this.message = \"\";\n          }, 1800);\n        } catch (error) {\n          this.message = \"حصل خطأ - لم تتم الاضافة!\";\n          console.log(error.response.data);\n        } finally {\n          this.loading = false;\n        }\n      }\n    },\n  },\n  validations() {\n    return {\n      groupForm: {\n        name: {\n          required,\n        },\n        type_id: {\n          required,\n          maxValue: greaterThanZero,\n        },\n        description: {\n          required,\n        },\n      },\n    };\n  },\n};\n</script>\n","import { render } from \"./AddGroup.vue?vue&type=template&id=04498019\"\nimport script from \"./AddGroup.vue?vue&type=script&lang=js\"\nexport * from \"./AddGroup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["GroupTypeService","getAllGroupTypes","groupTypes","api","get","data","error","create","type","groupType","post","getGroupTypeById","id","updateGroupTypeById","deleteGroupTypeById","GroupService","createGroup","groupForm","response","headers","handleError","getAll","name","page","groups","searchGroupByName","getById","group_id","group","showBasicInfo","getBooks","books","getAllGroupExceptions","groupExceptions","exceptionsFilter","filter","exceptions","BasicMarksView","week_id","AllAchievements","AchievementAsPages","searchForAmbassadorAchievement","ambassador_name","week_filter","searchForAmbassador","createLeaderRequest","request","lastLeaderRequest","deleteById","delete","update","getGroupByType","userGroups","statistics","customHandleError","thesesAndScreensByWeek","monthAchievement","assignAdministrator","form","console","log","statusCode","router","push","class","_createElementVNode","src","_imports_0","alt","for","style","value","selected","_imports_1","_hoisted_20","_hoisted_21","_createElementBlock","_hoisted_1","_createVNode","_component_iq_card","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","$event","$options","_hoisted_6","_hoisted_7","$setup","v$","$model","placeholder","$error","_hoisted_8","_hoisted_9","_hoisted_10","type_id","_hoisted_11","_Fragment","_renderList","$data","types","index","key","group_type","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","description","_hoisted_16","message","_hoisted_17","_toDisplayString","_createBlock","_component_router_link","to","_hoisted_18","loading","_hoisted_19","_hoisted_22","_hoisted_23","disabled","_hoisted_24","greaterThanZero","setup","useVuelidate","created","this","followup","supervising","advising","consultation","Administration","methods","$touch","$invalid","$reset","setTimeout","validations","required","maxValue","__exports__","render"],"sourceRoot":""}