{"version":3,"file":"js/3759.ef107b14.js","mappings":"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","sources":["webpack://Osboha180/./src/API/services/group.service.js","webpack://Osboha180/./src/utilities/errors.js","webpack://Osboha180/./src/components/group/AchievementPages.vue","webpack://Osboha180/./src/components/group/AchievementPages.vue?525b","webpack://Osboha180/./src/components/group/GroupTitle.vue","webpack://Osboha180/./src/components/group/GroupTitle.vue?7e8d","webpack://Osboha180/./src/views/OsbohaMain/Group/Ambassadors/AchievementAsPages.vue","webpack://Osboha180/./src/views/OsbohaMain/Group/Ambassadors/AchievementAsPages.vue?5e49"],"sourcesContent":["import { handleError } from \"vue\";\nimport { api } from \"../Intercepter\";\nimport { customHandleError } from \"../../utilities/errors\";\n\nclass GroupService {\n  async createGroup(groupForm) {\n    try {\n      const response = await api.post(`/group/create`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * Get all groups.\n   *\n   * @return groups;\n   */\n  async getAll(name,page) {\n    try {\n      const groups = await api.get(`/group?page=${page}&name=${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  /**\n   * Get groups by name.\n   *\n   * @param  group name\n   * @return groups;\n   */\n  async searchGroupByName(name) {\n    try {\n      const groups = await api.get(`group/search-group-by-name/${name}`);\n      return await groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display it.\n   *\n   * @param  $group_id\n   * @return group info [users , administrators] - posts;\n   */\n\n  async getById(group_id) {\n    try {\n      const group = await api.get(`group/show/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Find an existing group by its id and display its basic information.\n   *\n   * @param  $group_id\n   * @return group info;\n   */\n\n  async showBasicInfo(group_id) {\n    try {\n      const group = await api.get(`group/show-basic-info/${group_id}`);\n      return group.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Get all books belongs to group users.\n   *\n   * @param  $group_id\n   * @return group books;\n   */\n\n  async getBooks(group_id) {\n    try {\n      const books = await api.get(`group/books/${group_id}`);\n      return books.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  /**\n   * List all exceptions in a group by group Administrators\n   *\n   * @param $group_id\n   * @return group exceptions\n   */\n\n  async getAllGroupExceptions(group_id) {\n    try {\n      const groupExceptions = await api.get(\n        `group/group-exceptions/${group_id}`\n      );\n      return groupExceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Filter group exceptions.\n   *\n   * @param  exception filter , group _id\n   * @return filterd group exceptions\n   */\n\n  async exceptionsFilter(filter, group_id) {\n    try {\n      const exceptions = await api.get(\n        `group/exceptions-filter/${filter}/${group_id}`\n      );\n      return exceptions.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Basic group marks.\n   *\n   * @param  group _id\n   * @return group info , week satistics [100 - 0 -incomplete - most read]\n   */\n\n  async BasicMarksView(group_id,week_id) {\n    try {\n      const BasicMarksView = await api.get(`group/basic-mark-view/${group_id}/${week_id}`);\n      return BasicMarksView.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments\n   */\n  async AllAchievements(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/all-achievements/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * all ambassadors achievments as pages, order by total pages desc.\n   *\n   * @param  group _id , week filter [current - previous ]\n   * @return ambassadors achievments as total pages\n   */\n  async AchievementAsPages(group_id, week_id) {\n    try {\n      const response = await api.get(\n        `group/achievement-as-pages/${group_id}/${week_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * ambassador achievment in a week\n   *\n   * @param  ambassador_name, group _id , week filter [current - previous ]\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassadorAchievement(ambassador_name, group_id, week_filter) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador-achievement/${ambassador_name}/${group_id}/${week_filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * search for ambassador in group\n   *\n   * @param  ambassador_name, group _id\n   * @return ambassador achievment\n   */\n\n  async searchForAmbassador(ambassador_name, group_id) {\n    try {\n      const response = await api.get(\n        `group/search-for-ambassador/${ambassador_name}/${group_id}`\n      );\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * Add a new leader request (“create RequestAmbassador” permission is required)\n   *\n   * @param  request information [gender - number of requested members]\n  \n   */\n  async createLeaderRequest(request) {\n    try {\n      const response = await api.post(`/group/create-leader-request`, request, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * get last leader ambassador request\n   *\n   * @param  $group id\n   * @return last request;\n   */\n\n  async lastLeaderRequest(group_id) {\n    try {\n      const response = await api.get(`group/last-leader-request/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async deleteById(group_id) {\n    try {\n      return await api.delete(`/group/delete/${group_id}`);\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async update(groupForm) {\n    try {\n      const response = await api.post(`/group/update`, groupForm, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  async getGroupByType(type) {\n    try {\n      const groups=  await api.get(`/group/group-by-type/${type}`);\n      return groups.data.data;\n    } catch (error) {\n      return error;\n    }\n  }\n  async userGroups(name,page) {\n    try {\n      const groups = await api.get(`/group/user-groups?page=${page}&name=${name}`);\n      return groups.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /*\n    **** Need to discuss ****\n    async addMember(body) {\n        try {\n            const groups = await api.post('/user-group/', body);\n            return groups.data\n        } catch (error) {\n            return error.response.data.data\n        }\n    }\n    */\n  /**\n   * get group week statistics\n   *\n   * @param  $group_id\n   * @return statistics;\n   */\n\n  async statistics(group_id) {\n    try {\n      const response = await api.get(`group/statistics/${group_id}`);\n      return response.data.data;\n    } catch (error) {\n      customHandleError(error, \"statistics\");\n    }\n  }\n  /**\n   * get screenshots and screens by week\n   *\n   * @param  $group_id,$filter\n   * @return number of theses and screenshots;\n   */\n  async thesesAndScreensByWeek(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/theses-and-screens-by-week/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  /**\n   * get avg in a month\n   *\n   * @param  $group_id,$filter\n   * @return month achievement;\n   */\n  async monthAchievement(group_id, filter) {\n    try {\n      const response = await api.get(\n        `group/month-achievement/${group_id}/${filter}`\n      );\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async assignAdministrator(form) {\n    try {\n      const response = await api.post(`/group/assign-administrator`, form, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      });\n      return response.data.data;\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  \n}\n\nexport default new GroupService();\n","import router from \"../router\";\n\nexport function customHandleError(error, page = \"\") {\n  console.log(`[ERROR] ${page} =>`, error.response.data);\n  if (error.response.data.statusCode === 404) {\n    router.push({ name: \"NotFound\" });\n  } else if (error.response.data.statusCode === 403) {\n    router.push({ name: \"NotAuthorized\" });\n  }\n  throw error;\n}\n","<template>\r\n  <BaseAvatar\r\n    :profileImg=\"record.user_profile?.profile_picture\"\r\n    :profile_id=\"record.user_profile?.id\"\r\n    :title=\"record.name\"\r\n    :gender=\"record.gender\"\r\n    avatarClass=\"rounded-circle avatar-40\"\r\n  />\r\n  <div class=\"d-flex align-items-center justify-content-between w-100\">\r\n    <div class=\"ms-3\">\r\n      <h6>{{ record.name }}</h6>\r\n      <p class=\"mb-0\">\r\n        عدد الصفحات:\r\n        {{ record.mark?.length > 0 ? record.mark[0].total_pages : 0 }}\r\n      </p>\r\n    </div>\r\n    <div class=\"card-header-toolbar d-flex align-items-center\">\r\n      <router-link\r\n        :to=\"{\r\n          name: 'group.listOneAmbassadorReading',\r\n          params: { ambassador_id: record.id, week_id: week_id },\r\n        }\"\r\n      >\r\n        <i class=\"material-symbols-outlined md-18 me-1 text-primary\">\r\n          visibility\r\n        </i>\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Achievement Pages\",\r\n  props: {\r\n    record: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n    week_id: {\r\n      type: [Number],\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./AchievementPages.vue?vue&type=template&id=05276c28\"\nimport script from \"./AchievementPages.vue?vue&type=script&lang=js\"\nexport * from \"./AchievementPages.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"card position-relative inner-page-bg\" style=\" direction: rtl !important; background-color: #cae0cd; height: 100px;\">\r\n        <div class=\"inner-page-title\">\r\n            <h3 class=\"text-dark\">فريق المتابعة || {{ group_name }}</h3>\r\n            <p>\r\n                عدد السفراء\r\n                <strong>{{ group_users }}</strong>\r\n            </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Group Title',\r\n    props: {\r\n        group_name: {\r\n            type: [String],\r\n            required: true,\r\n        },\r\n        group_users: {\r\n            type: [Number],\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return [\r\n        ]\r\n    },\r\n\r\n}\r\n</script>\r\n","import { render } from \"./GroupTitle.vue?vue&type=template&id=426f763c\"\nimport script from \"./GroupTitle.vue?vue&type=script&lang=js\"\nexport * from \"./GroupTitle.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <iq-card>\r\n                <template v-slot:body>\r\n                    <GroupTitle :group_id:=\"group.id\" :group_name=\"group.name\" :group_users=\"group_users\" />\r\n                    <div class=\"iq-todo-right\">\r\n                        <div class=\"iq-todo-friendlist mt-3\">\r\n                            <!-- <div class=\"dropdown w-100 p-3\">\r\n                                <select class=\"form-select\" @change=\"listByWeek()\" v-model=\"weekFilter\">\r\n                                    <option class=\"dropdown-item\" value=\"current\" selected>هذا الأسبوع</option>\r\n                                    <option class=\"dropdown-item\" value=\"previous\">الاسبوع السابق</option>\r\n                                </select>\r\n                            </div> -->\r\n                            <ul class=\"todo-task-lists m-0 p-0\" v-if=\"achievementsLoaded && achievementsLoaded.length > 0\">\r\n                                <li class=\"d-flex mb-4 align-items-center\" v-for=\"(record, index) in achievementsLoaded\"\r\n                                    :key=index>\r\n                                    <AchievementPages :record=\"record\" :week_id=\"week_id\" />\r\n                                </li>\r\n                                <li class=\"d-block text-center mb-0 pb-0\" v-if=\"ambassadorsAchievement.length > length\">\r\n                                    <a class=\"me-3 btn\" role=\"button\" @click=\"loadMore()\">عرض المزيد</a>\r\n                                </li>\r\n                            </ul>\r\n                            <iq-card class=\"iq-card\" v-else>\r\n                                <div class=\"iq-card-body p-0\">\r\n                                    <div class=\"image-block text-center\">\r\n                                        <img src=\"@/assets/images/main/reader.png\" class=\"img-fluid rounded w-75 mt-3\"\r\n                                            alt=\"no-amb\">\r\n                                    </div>\r\n                                    <h4 class=\"text-center mt-3 mb-3\">لا يوجد انجاز لهذا الاسبوع</h4>\r\n                                </div>\r\n                            </iq-card>\r\n\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </iq-card>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport GroupService from '@/API/services/group.service';\r\nimport GroupTitle from '@/components/group/GroupTitle.vue'\r\nimport AchievementPages from '@/components/group/AchievementPages.vue'\r\n\r\nexport default {\r\n    name: 'Achievement As Pages',\r\n    components: {\r\n        GroupTitle,\r\n        AchievementPages\r\n    },\r\n    async created() {\r\n\r\n        try {\r\n            const response = await GroupService.AchievementAsPages(this.group_id, this.week_id);            \r\n            this.group = response.group\r\n            this.group_users = response.group_users\r\n            this.ambassadorsAchievement = response.ambassadors_achievement\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            group: [],\r\n            group_users: 0,\r\n            group_id: this.$route.params.group_id,\r\n            week_id:this.$route.params.week_id,\r\n            ambassadorsAchievement: [],\r\n            length: 10,\r\n            weekFilter: 'current'\r\n        }\r\n    },\r\n    methods: {\r\n        loadMore() {\r\n            if (this.length > this.ambassadorsAchievement.length) return;\r\n            this.length = this.length + 10;\r\n        },\r\n        async listByWeek() {\r\n            const response = await GroupService.AchievementAsPages(this.group_id, this.weekFilter)\r\n            this.group_users = response.group_users\r\n            this.ambassadorsAchievement = response.ambassadors_achievement\r\n\r\n        },\r\n\r\n    },\r\n    computed: {\r\n        achievementsLoaded() {\r\n            return this.ambassadorsAchievement.slice(0, this.length);\r\n        },\r\n    },\r\n}\r\n</script>\r\n","import { render } from \"./AchievementAsPages.vue?vue&type=template&id=ff10c8a4\"\nimport script from \"./AchievementAsPages.vue?vue&type=script&lang=js\"\nexport * from \"./AchievementAsPages.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["GroupService","createGroup","groupForm","response","api","post","headers","data","error","handleError","getAll","name","page","groups","get","searchGroupByName","getById","group_id","group","showBasicInfo","getBooks","books","getAllGroupExceptions","groupExceptions","exceptionsFilter","filter","exceptions","BasicMarksView","week_id","AllAchievements","AchievementAsPages","searchForAmbassadorAchievement","ambassador_name","week_filter","searchForAmbassador","createLeaderRequest","request","lastLeaderRequest","deleteById","delete","update","getGroupByType","type","userGroups","statistics","customHandleError","thesesAndScreensByWeek","monthAchievement","assignAdministrator","form","console","log","statusCode","router","push","class","_createElementVNode","_createVNode","_component_BaseAvatar","profileImg","_$props$record$user_p","$props","record","user_profile","profile_picture","profile_id","_$props$record$user_p2","id","title","gender","avatarClass","_hoisted_1","_hoisted_2","_toDisplayString","_hoisted_3","_$props$record$mark","mark","length","total_pages","_hoisted_4","_component_router_link","to","_hoisted_5","props","Object","required","Number","__exports__","render","style","_createElementBlock","group_name","group_users","String","src","_imports_0","alt","_component_iq_card","body","_withCtx","_component_GroupTitle","$data","$options","achievementsLoaded","_Fragment","_renderList","index","key","_component_AchievementPages","ambassadorsAchievement","_hoisted_6","role","onClick","_cache","$event","loadMore","_createBlock","_hoisted_7","components","GroupTitle","AchievementPages","created","this","ambassadors_achievement","$route","params","weekFilter","methods","listByWeek","computed","slice"],"sourceRoot":""}